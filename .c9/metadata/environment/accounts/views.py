{"filter":false,"title":"views.py","tooltip":"/accounts/views.py","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["from django.shortcuts import render","","# Create your views here.",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":74,"column":49},"action":"insert","lines":["from django.shortcuts import render, redirect, HttpResponseRedirect","from django.contrib import messages, auth","from django.core.urlresolvers import reverse","from .forms import UserLoginForm, UserRegistrationForm","from django.template.context_processors import csrf","from django.contrib.auth.decorators import login_required","","","# Create your views here.","def index(request):","    \"\"\"A view that displays the index page\"\"\"","    return render(request, \"index.html\")","","","def logout(request):","    \"\"\"A view that logs the user out and redirects back to the index page\"\"\"","    auth.logout(request)","    messages.success(request, 'You have successfully logged out')","    return redirect(reverse('index'))","","","def login(request):","    \"\"\"A view that manages the login form\"\"\"","    if request.method == 'POST':","        user_form = UserLoginForm(request.POST)","        if user_form.is_valid():","            user = auth.authenticate(request.POST['username_or_email'],","                                     password=request.POST['password'])","","            if user:","                auth.login(request, user)","                messages.error(request, \"You have successfully logged in\")","","                if request.GET and request.GET['next'] !='':","                    next = request.GET['next']","                    return HttpResponseRedirect(next)","                else:","                    return redirect(reverse('index'))","            else:","                user_form.add_error(None, \"Your username or password are incorrect\")","    else:","        user_form = UserLoginForm()","","    args = {'user_form': user_form, 'next': request.GET.get('next', '')}","    return render(request, 'login.html', args)","","","@login_required","def profile(request):","    \"\"\"A view that displays the profile page of a logged in user\"\"\"","    return render(request, 'profile.html')","","","def register(request):","    \"\"\"A view that manages the registration form\"\"\"","    if request.method == 'POST':","        user_form = UserRegistrationForm(request.POST)","        if user_form.is_valid():","            user_form.save()","","            user = auth.authenticate(request.POST.get('email'),","                                     password=request.POST.get('password1'))","","            if user:","                auth.login(request, user)","                messages.success(request, \"You have successfully registered\")","                return redirect(reverse('index'))","","            else:","                messages.error(request, \"unable to log you in at this time!\")","    else:","        user_form = UserRegistrationForm()","","    args = {'user_form': user_form}","    return render(request, 'register.html', args)"]}],[{"start":{"row":2,"column":28},"end":{"row":2,"column":29},"action":"remove","lines":["s"],"id":3},{"start":{"row":2,"column":27},"end":{"row":2,"column":28},"action":"remove","lines":["r"]},{"start":{"row":2,"column":26},"end":{"row":2,"column":27},"action":"remove","lines":["e"]},{"start":{"row":2,"column":25},"end":{"row":2,"column":26},"action":"remove","lines":["v"]},{"start":{"row":2,"column":24},"end":{"row":2,"column":25},"action":"remove","lines":["l"]},{"start":{"row":2,"column":23},"end":{"row":2,"column":24},"action":"remove","lines":["o"]},{"start":{"row":2,"column":22},"end":{"row":2,"column":23},"action":"remove","lines":["s"]},{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"remove","lines":["e"]},{"start":{"row":2,"column":20},"end":{"row":2,"column":21},"action":"remove","lines":["r"]}],[{"start":{"row":2,"column":20},"end":{"row":2,"column":21},"action":"insert","lines":["s"],"id":4}],[{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"remove","lines":["."],"id":5},{"start":{"row":2,"column":15},"end":{"row":2,"column":16},"action":"remove","lines":["e"]},{"start":{"row":2,"column":14},"end":{"row":2,"column":15},"action":"remove","lines":["r"]},{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"remove","lines":["o"]},{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"remove","lines":["c"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":2,"column":12},"end":{"row":2,"column":12},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1570991063219,"hash":"f950255017d46a9e42d7c17e5d0c65c3bfa4fb14"}